{"version":3,"sources":["components/TasklistItem.js","components/Tasklist.js","components/Header.js","components/InputTask.js","components/TasklistContainer.js","index.js"],"names":["TasklistItem","alert","this","props","task","completed","id","title","className","type","checked","onChange","handleChangeProps","onClick","deleteTaskProps","style","fontStyle","color","opacity","textDecoration","Component","Tasklist","tasks","map","React","Header","prevProps","prevState","randomColor","Math","random","status","document","getElementById","backgroundColor","padding","lineHeight","fontSize","marginBottom","textAlign","InputTask","state","e","setState","target","name","value","handleSubmit","preventDefault","addTaskProps","onSubmit","placeholder","TasklistContainer","rainbowStatus","handleChange","deleteTask","axios","delete","then","response","filter","addTask","post","data","get","params","_limit","ReactDOM","render"],"mappings":"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","file":"static/js/main.11382a1b.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass TasklistItem extends Component {\n  componentWillUnmount() {\n    alert('The Task-item will be deleted!');\n  };\n\n  render() {\n    const { completed, id, title } = this.props.task\n\n    const completedTaskStyles = {\n      fontStyle: \"italic\",\n      color: \"#d35e0f\",\n      opacity: 0.7,\n      textDecoration: \"line-through\"\n    };\n\n    return (\n      <li className=\"task-item\" >\n        <input type=\"checkbox\" checked={completed} onChange={() => this.props.handleChangeProps(id)}/>\n        <button onClick={() => this.props.deleteTaskProps(id)} >Delete</button>\n        <span style={completed ? completedTaskStyles : null}>\n          {title}\n        </span>\n      </li>\n    );\n  }\n}\n\nexport default TasklistItem;","import React from 'react';\nimport TasklistItem from './TasklistItem';\n\nclass Tasklist extends React.Component {\n  render() {\n    return (\n      <div>\n        {this.props.tasks.map(task => (\n          <TasklistItem\n            key={task.id} task={task}\n            handleChangeProps={this.props.handleChangeProps}\n            deleteTaskProps={this.props.deleteTaskProps}\n          />\n        ))}\n      </div>\n    );\n  };\n}\n\nexport default Tasklist;","import React, { Component } from 'react';\n\nclass Header extends Component {\n  componentDidUpdate(prevProps, prevState) {\n    // let randomColor = '#'+Math.floor(Math.random()*16777215).toString(16);\n    // Generate light colors\n    let randomColor = \"hsl(\" + Math.random() * 360 + \", 100%, 75%)\";\n\n    if(prevProps.status !== this.props.status) {\n      document.getElementById('rainbow').style.backgroundColor = randomColor;\n    }\n  };\n\n  render() {\n    const headerStyles = {\n      padding: \"10px 0\",\n      lineHeight: \"2em\",\n    };\n  \n    return (\n      <header style={ headerStyles }>\n        <h1 style={ { fontSize: '40px', marginBottom: '15px', textAlign: 'center' } } id='rainbow'>Simple Tasklist App!</h1>\n        <p style={ { fontSize: '15px' } } >Please add task-list item(s) through the input filed.</p>\n      </header>\n    );\n  };\n}\n\nexport default Header;","import React, { Component } from 'react';\n\nclass InputTask extends Component {\n  state = {\n    title: ''\n  };\n\n  onChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.addTaskProps(this.state.title);\n    this.setState({\n      title: ''\n    });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit} className=\"form-container\">\n        <input type=\"text\" className=\"input-text\" placeholder=\"Add Task...\" name=\"title\" value={this.state.title} onChange={this.onChange} />\n        <input type=\"submit\" className=\"input-submit\" value=\"Submit\" />\n      </form>\n    );\n  };\n};\n\nexport default InputTask;","import React from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport axios from 'axios';\n\nimport Tasklist from './Tasklist';\nimport Header from './Header';\nimport InputTask from './InputTask';\n\nclass TasklistContainer extends React.Component {\n  state = {\n    tasks: [],\n    rainbowStatus: false,\n  };\n\n  // This handle method for marking the Tasks as completed\n  handleChange = (id) => {\n    this.setState((prevState) => ({\n      tasks: prevState.tasks.map((task) => {\n        if(task.id === id) {\n          task.completed = !task.completed;\n        }\n        return task\n        }),\n      rainbowStatus: !this.state.rainbowStatus,\n    }));\n  };\n\n  deleteTask = (id) => {\n    axios.delete(`https://jsonplaceholder.typicode.com/todos/${id}`)\n         .then((response) => {\n           this.setState({\n             tasks: [\n               ...this.state.tasks.filter((task) => {\n                 return task.id !== id;\n               })\n             ]\n           })\n         });\n  };\n\n  addTask = (title) => {\n    if(!title) return;\n\n    axios.post('https://jsonplaceholder.typicode.com/todos', {\n        title: title,\n        completed: false\n    }).then((response) => {\n      this.setState({\n        tasks: [...this.state.tasks, response.data]\n      })\n    });\n  };\n\n  componentDidMount() {\n    axios.get('https://jsonplaceholder.typicode.com/todos', {\n      params: {\n        _limit: 10\n      }\n    }).then((response) => {\n      this.setState({\n        tasks: response.data\n      })\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <Header status={this.state.rainbowStatus}/>\n        <InputTask addTaskProps={this.addTask} />\n        <Tasklist\n          tasks={this.state.tasks}\n          handleChangeProps={this.handleChange}\n          deleteTaskProps={this.deleteTask}\n        />\n      </div>\n    );\n  };\n}\n\nexport default TasklistContainer;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './App.css';\n\nimport TasklistContainer from './components/TasklistContainer';\n\nReactDOM.render(<TasklistContainer />, document.getElementById('root'));\n"],"sourceRoot":""}